[m]
    # Merger

    image_format = string(default=png)

    # Which steps should be saved?
    # Options: frame, diff, metric, layer, merge, final (like merge, but
    #   only at the end)
    save = string_list(default=list('final'))

    # Which steps should have a live preview?
    # Same options as 'save'
    preview = string_list(default=list())

    # Maximum height x width of window.
    preview_max_size = int_list(default=list(500, 1000))

    [[mean]]
        # Options: mean, single, patched
        strategy = string(default="patched")

        [[[single]]]
            # frame number to be taken as mean
            no = integer(default=0)

        [[[patched]]]
            # fraction of the image to split, i.e. 0.5 to take the left and
            # right half of the image
            fraction = float(default=0.5)
            # first frame to take
            no1 = integer(default=-1)
            # second frame to take
            no2 = integer(default=0)

    [[metric]]
        # Strategy to calculate a metric on the rgb values
        # Options: r3 (R3 metric)
        strategy = string(default=r3)

        # Stictly speaking the following

        # Metric gets multiplied by this
        intensity = float(default=500)

        # This value gets added to the metric
        zero = float(default=1.)


    [[mpp]]
        # Metric Post Processing

        # Operations performed on the metric values
        # Options: blur, cutoff, edge
        # Note: Operations are applied in that order.
        operations = string_list(default=list('blur', 'cutoff'))

        # The following are options to the operations

            [[[blur]]]
                shape = int_list(default=list(5,5))

                # Note that setting sigma to 0 is like a 'auto' setting
                sigmas = int_list(default=list(0,0))

            [[[cutoff]]]
                threshold = float(default=0.1)
                min = float(default = 0.1)
                max = float(default = 1.)

            [[[edge]]]
                canny1 = integer(default=100)
                canny2 = integer(default=200)

    [[layer]]
        multiply = float(default = 1.)
        add = float(default = 0.)

        # todo: also blur here

    [[overlay]]

        # Options: add, overlay, overlaymean
        strategy = string(default=add)
